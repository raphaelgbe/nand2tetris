// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    //Or8Way(in[0]=reset, in[1]=load, in[2]=inc, in[3..7]=false, out=somethingWillBeLoaded); //actually unnecessary -> if they are all false then Register input is previous output!!
    Inc16(in=temp, out=tempPlusOne);
    Mux16(a=temp, b=tempPlusOne, sel=inc, out=tempInced);
    Mux16(a=tempInced, b=in, sel=load, out=tempLoaded);
    Mux16(a=tempLoaded, b=false, sel=reset, out=tempReset);
    //Register(in=tempReset, load=somethingWillBeLoaded, out=temp, out=out); //actually unnecessary -> if they are all false then Register input is previous output!!
    Register(in=tempReset, load=true, out=temp, out=out);
}
